// <auto-generated />
using CDE.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CDE.Infra.Migrations
{
    [DbContext(typeof(CDEContext))]
    [Migration("20210122194029_inicial")]
    partial class inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CDE.Domain.Entities.Localizacao", b =>
                {
                    b.Property<int>("LocalizacaoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Andar")
                        .IsRequired()
                        .HasColumnType("char(3)");

                    b.Property<string>("Corredor")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Prateleira")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<string>("Vao")
                        .IsRequired()
                        .HasColumnType("varchar(10)");

                    b.HasKey("LocalizacaoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("Localizacao");
                });

            modelBuilder.Entity("CDE.Domain.Entities.Produto", b =>
                {
                    b.Property<int>("ProdutoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ProdutoAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("ProdutoGrupo")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("ProdutoNome")
                        .IsRequired()
                        .HasColumnType("varchar(40)");

                    b.Property<int>("ProdutoQuantidade")
                        .HasColumnType("int");

                    b.Property<string>("ProdutoUnidadeMedida")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.HasKey("ProdutoId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("CDE.Domain.Entities.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UsuarioCpf")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("UsuarioEmail")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioNome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("UsuarioSenha")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CDE.Domain.Entities.Localizacao", b =>
                {
                    b.HasOne("CDE.Domain.Entities.Produto", "Produto")
                        .WithMany("ProdutoLocalizacao")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
